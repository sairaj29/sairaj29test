version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.10
    commands:
      - echo "Installing dependencies..."
      - |
        curl -I https://google.com || { echo "Network issue detected"; exit 1; }
      - yum clean all
      - yum update -y
      - dnf install -y curl || { echo "Fallback: Installing curl from source"; cd /tmp && curl -O https://curl.se/download/curl-7.79.1.tar.gz && tar -xzvf curl-7.79.1.tar.gz && cd curl-7.79.1 && ./configure && make && make install }
      - curl -L "https://github.com/docker/compose/releases/download/2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      - chmod +x /usr/local/bin/docker-compose
      - ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
      - pip install bandit flake8
      - docker-compose version
      - service docker start
      - docker info

  pre_build:
    commands:
      - echo "Running Static Code Analysis..."
      - flake8 backend/app.py
      - bandit -r backend

  build:
    commands:
      - echo "Building Docker Compose services..."
      - docker-compose build
      - echo "Tagging Docker images for ECR..."
      - docker tag backend:latest public.ecr.aws/i4a2a9c3/sairaj29test:backend-latest
      - docker tag frontend:latest public.ecr.aws/i4a2a9c3/sairaj29test:frontend-latest
      - echo "Pushing Docker images to ECR..."
      - docker push public.ecr.aws/i4a2a9c3/sairaj29test:backend-latest
      - docker push public.ecr.aws/i4a2a9c3/sairaj29test:frontend-latest

  post_build:
    commands:
      - echo "Build and push to ECR completed successfully."

artifacts:
  files:
    - docker-compose.yml
    - backend/**/*
    - frontend/**/*
